<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RIYUIV&#39;s Blog</title>
  
  <subtitle>丨Algorithm x Machine Learning丨</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://suyaoling.com/"/>
  <updated>2018-12-03T04:47:36.601Z</updated>
  <id>https://suyaoling.com/</id>
  
  <author>
    <name>苏曜灵</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第三章 Java的基本程序设计结构</title>
    <link href="https://suyaoling.com/2018/12/03/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86-2018-12-3/"/>
    <id>https://suyaoling.com/2018/12/03/Java基础知识-2018-12-3/</id>
    <published>2018-12-03T04:31:20.000Z</published>
    <updated>2018-12-03T04:47:36.601Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java变量声明"><a href="#Java变量声明" class="headerlink" title="Java变量声明"></a>Java变量声明</h2><p><font size="3"><br><strong>1. Java变量不分定义和声明,但定义过后必须初始化。</strong></font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">i = <span class="number">10</span>;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="comment">//正确</span></span><br><span class="line"><span class="comment">/*-------------------------*/</span> </span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">System.out.println(i);</span><br><span class="line"><span class="comment">//错误</span></span><br></pre></td></tr></table></figure><p><strong>2. Java使用final关键字定义常量</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">double</span> CM_PER_INCH = <span class="number">2.54</span>;</span><br></pre></td></tr></table></figure></p><hr><h2 id="String-类"><a href="#String-类" class="headerlink" title="String 类"></a>String 类</h2><p><font size="3"><br><strong>1. Java的String类 类似与C的char*指针，且String对象不能改变。</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">String str = <span class="string">"Hello!"</span>;</span><br><span class="line">str = <span class="string">"Ok!"</span>;</span><br><span class="line"><span class="comment">//Java Code</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* temp = malloc(<span class="number">3</span>);</span><br><span class="line">temp = <span class="string">"Ok!"</span>;</span><br><span class="line">str = temp;</span><br><span class="line"><span class="comment">//equivalent C Code</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//因为这个特征，string类不提供insert方法。</span></span><br></pre></td></tr></table></figure></font></p><p><strong>2. 检验相等时不能使用 “==”，Java不提供运算符重载。</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//"=="只能检验两个String是否指向同一个位置，内容相同的字符串不一定存储在同一个位置</span></span><br><span class="line"><span class="keyword">if</span> (str == <span class="string">"Hello!"</span>)...;</span><br><span class="line"><span class="comment">//Maybe false Maybe true</span></span><br><span class="line"><span class="keyword">if</span> (str.equals(<span class="string">"Hello!"</span>)... ;</span><br><span class="line"><span class="comment">//正确使用</span></span><br></pre></td></tr></table></figure></p><p><strong>3. 判断空串</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(str.length() == <span class="number">0</span>)</span><br><span class="line"><span class="comment">//or</span></span><br><span class="line"><span class="keyword">if</span>(str.equals(<span class="string">""</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//有些Stirng对象可能为特殊值null</span></span><br><span class="line"><span class="comment">//要先检查是不是null再检查是不是空串，因为null值上调用方法会出错</span></span><br><span class="line"><span class="keyword">if</span>(str!=<span class="keyword">null</span> &amp;&amp; str.length!=<span class="number">0</span>)...;</span><br></pre></td></tr></table></figure></p><p><strong>3. 常用API</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">str.compareTo(String other) <span class="comment">//即C中的strcmp()</span></span><br><span class="line">str.equals(Object other) <span class="comment">//判断str与other是否相等</span></span><br><span class="line">str.indexOf(String substr) <span class="comment">//寻找substr在str第一次出现的位置，不存在则返回-1</span></span><br><span class="line">str.length() <span class="comment">//返回字符串的长度</span></span><br><span class="line">str.replace(oldstring, newstring)<span class="comment">//用newstring替代所有str中的oldstirng</span></span><br><span class="line">str.trim() <span class="comment">//返回一个删掉str头尾空格的String</span></span><br><span class="line">str.substring(beginIndex,(endIndex))<span class="comment">//返回str中下标从begin到end的子串</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="Scanner-类"><a href="#Scanner-类" class="headerlink" title="Scanner 类"></a>Scanner 类</h2><p><font size="3"><br><strong>1. Scanner在 java.util 包中 多用于输入，其用法为</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">in.nextLine();</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></font></p><p><strong>2. 常用API</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">in.nextLine() <span class="comment">//读取下一行输入</span></span><br><span class="line">in.next() <span class="comment">//读取下一个单词，空格作为分隔符</span></span><br><span class="line">in.nextInt()</span><br><span class="line">in.nextDouble()<span class="comment">//读取下一个整型或浮点型字符序列</span></span><br><span class="line">in.hasNext()</span><br><span class="line">in.hasNextInt()</span><br><span class="line">in.hasNextDouble() <span class="comment">//检验是否还有下一个单词/整数/浮点数</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p><font size="3"><br><strong>1. 声明</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a;<span class="comment">//只是声明，没有初始化。</span></span><br><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];<span class="comment">//初始化，下标从0-99，数字数组初始化为0，对象数组初始化为null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[];<span class="comment">//也可以这么声明，但是习惯上用上面那种。</span></span><br></pre></td></tr></table></figure></font></p><p><strong>2. for each循环</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> element: a)</span><br><span class="line">System.out.println(element)</span><br><span class="line"><span class="comment">//类似python</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//然而打印字符内容有更简单的方法</span></span><br><span class="line">System.out.println(Arrays.toString(a))</span><br><span class="line"><span class="comment">//java.util.Arrays</span></span><br><span class="line"><span class="comment">//转化成的字符串为[1,2,3,4,..]</span></span><br></pre></td></tr></table></figure></p><p><strong>3. 初始化</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] smallPrimes = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>&#125;; <span class="comment">//不用调用new</span></span><br><span class="line">SmallPrims = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>&#125;; <span class="comment">//注，这里是利用匿名数组重新初始化</span></span><br></pre></td></tr></table></figure></p><p><strong>4. 数组拷贝</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//变量引用同一个数组</span></span><br><span class="line"><span class="keyword">int</span>[] arr = smallPrimes;</span><br><span class="line"><span class="comment">//值拷贝</span></span><br><span class="line"><span class="keyword">int</span>[] arr = Arrays.copyOf(smallPrime,smallPrime.length);</span><br><span class="line"><span class="comment">//也可以用于增长数组大小,多余的元素会被赋值为0，如果长度更小，只复制前面的元素</span></span><br><span class="line">smallPrime = Arrays.copyOf(smallPrime,<span class="number">2</span> * smallPrime.length);</span><br></pre></td></tr></table></figure></p><p><strong>5. 常用API</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Arrays.toString(type[] a) <span class="comment">//上面介绍了</span></span><br><span class="line">Arrays.copyOf(type[] a,<span class="keyword">int</span> length)</span><br><span class="line">Arrays.copyOfRange(type[] a,<span class="keyword">int</span> start,<span class="keyword">int</span> end) <span class="comment">//返回长度为end - start的a的子数组，[start,end),若end &gt; length则返回0</span></span><br><span class="line">Arrays.binarySearch(type[] a, type v)</span><br><span class="line">Arrays.binarySearch(type[] a,<span class="keyword">int</span> start, <span class="keyword">int</span> end,type v)</span><br><span class="line"><span class="comment">//二分查找 ( [start,end) ) 找到了返回下标，否则返回负数r,(-r-1)为保持a有序的V插入点</span></span><br><span class="line">Arrays.fill(a,v) <span class="comment">//将数组所有值置为v</span></span><br></pre></td></tr></table></figure></p><p><strong>6. 多维数组</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span>[][] arr = <span class="keyword">new</span> [...][...];</span><br><span class="line"><span class="comment">//也可以</span></span><br><span class="line"><span class="keyword">int</span>[][] magicSquare =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">16</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">13</span>&#125;,</span><br><span class="line">&#123;<span class="number">5</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">8</span>&#125;,</span><br><span class="line">&#123;<span class="number">9</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">12</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">15</span>,<span class="number">14</span>,<span class="number">1</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//for each</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">double</span>[] row:arr)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">double</span> value:row)</span><br><span class="line"><span class="keyword">do</span> something with value...</span><br><span class="line"></span><br><span class="line"><span class="comment">//快速打印[[...],[...],[...,],...]</span></span><br><span class="line">System.out.println(Arrays.deepToString(arr));</span><br></pre></td></tr></table></figure></p><p><strong>7. 不规则数组</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不同于C/C++ Java支持不规则数组，即每一行的长度可以不同</span></span><br><span class="line"><span class="keyword">int</span>[][] odds = <span class="keyword">new</span> <span class="keyword">int</span>[NMAX+<span class="number">1</span>][];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt;=NMAX; n++;)</span><br><span class="line">odds[n] = <span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>]</span><br><span class="line"><span class="comment">//odds[0] = 0</span></span><br><span class="line"><span class="comment">//odds[1] = 0 0</span></span><br><span class="line"><span class="comment">//odds[2] = 0 0 0</span></span><br><span class="line"><span class="comment">//......</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java变量声明&quot;&gt;&lt;a href=&quot;#Java变量声明&quot; class=&quot;headerlink&quot; title=&quot;Java变量声明&quot;&gt;&lt;/a&gt;Java变量声明&lt;/h2&gt;&lt;p&gt;&lt;font size=&quot;3&quot;&gt;&lt;br&gt;&lt;strong&gt;1. Java变量不分定义和声明,但定
      
    
    </summary>
    
      <category term="Java 核心技术 卷Ⅰ" scheme="https://suyaoling.com/categories/Java-%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF-%E5%8D%B7%E2%85%A0/"/>
    
    
      <category term="Java" scheme="https://suyaoling.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>A + B problem by Java</title>
    <link href="https://suyaoling.com/2018/11/10/A+B_Problem/"/>
    <id>https://suyaoling.com/2018/11/10/A+B_Problem/</id>
    <published>2018-11-10T08:51:30.000Z</published>
    <updated>2018-11-10T09:17:13.798Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Scanner in =<span class="keyword">new</span> Scanner(<span class="keyword">new</span> BufferedInputStream(System.in));</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (in.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(in.nextInt()+in.nextInt());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1. 格式</span></span><br><span class="line"><span class="comment">1.1 不要带上package name！</span></span><br><span class="line"><span class="comment">1.2 class name 一定要是Main</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">2. 输入</span></span><br><span class="line"><span class="comment">2.1 scanner</span></span><br><span class="line"><span class="comment">输入肯定是new一个Scanner类，但是会有两种方式：</span></span><br><span class="line"><span class="comment">  Scanner sc = new Scanner (System.in);</span></span><br><span class="line"><span class="comment">  Scanner sc = new Scanner (new BufferedInputStream(System.in));//数据量大的情况下此种方式快</span></span><br><span class="line"><span class="comment">2.2 终止条件</span></span><br><span class="line"><span class="comment">万金油:while(sc .hasNext())</span></span><br><span class="line"><span class="comment">矫情一点：sc .hasNextInt()或sc .hasNextDouble()或sc .hasNextLine()</span></span><br><span class="line"><span class="comment">2.3 读值</span></span><br><span class="line"><span class="comment">int: int n = sc.nextInt();</span></span><br><span class="line"><span class="comment">double: double t = sc.nextDouble();</span></span><br><span class="line"><span class="comment">string space split(空格分割): String s = sc.next();</span></span><br><span class="line"><span class="comment">string enter split(换行分割): String s = sc.nextLine();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">3. 输出</span></span><br><span class="line"><span class="comment">和C中的printf保持一致:</span></span><br><span class="line"><span class="comment"> System.out.printf("%s %d %fn",arg1,arg2,arg3);</span></span><br><span class="line"><span class="comment">自带换行</span></span><br><span class="line"><span class="comment"> System.out.println(arg1);</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="Algorithm" scheme="https://suyaoling.com/categories/Algorithm/"/>
    
    
      <category term="Java" scheme="https://suyaoling.com/tags/Java/"/>
    
      <category term="ACM" scheme="https://suyaoling.com/tags/ACM/"/>
    
  </entry>
  
</feed>
